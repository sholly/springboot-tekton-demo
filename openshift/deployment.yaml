apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  labels:
    app: springboot-tekton
    app.kubernetes.io/component: springboot-tekton
    app.kubernetes.io/instance: springboot-tekton
    app.kubernetes.io/name: springboot-tekton
  name: springboot-tekton
  namespace: springboot-tekton
spec:
  affinity: 
  podAffinity: 
    requiredDuringSchedulingIgnoreDuringExecution:
    - labelSelector: 
        matchExpressions: 
        - key: app
          operator: In
          values: 
          - springboot-tekton
  progressDeadlineSeconds: 600
  replicas: 4
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: springboot-tekton
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deployment: springboot-tekton
    spec:
      containers:
        - name: springboot-tekton
          image: >-
            image-registry.openshift-image-registry.svc:5000/springboot-tekton/springboot-tekton:latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
