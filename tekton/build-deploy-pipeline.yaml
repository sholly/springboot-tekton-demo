apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cut-commit-hash
spec:
  params:
    - name: commit
      description: the first operand
  results:
    - name: commit_short
      description: the sum of the first and second operand
  steps:
    - name: cut
      image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
      env:
        - name: COMMIT
          value: $(params.commit)
      command: ["/bin/sh", "-c"]
      args:
        - COMMIT_SHORT=$(echo -n ${COMMIT} |cut -c 1-10); echo -n $COMMIT_SHORT | tee $(results.commit_short.path);
---

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: clone-build-deploy
spec:
  workspaces:
  - name: shared-workspace
  - name: maven-settings
  params:
  - name: deployment-name
    type: string
    description: name of the deployment to be patched
    default: springboot-tekton
  - name: git-url
    type: string
    default: 'https://github.com/sholly/springboot-tekton-demo.git'
    description: url of the git repo for the code of deployment
  - name: git-revision
    type: string
    description: revision to be used from repo of the code for deployment
    default: main
  - name: image
    type: string
    description: image to be build from the code
    default: 'image-registry.openshift-image-registry.svc:5000/springboot-tekton/springboot-tekton'
  tasks:
  - name: fetch-repository
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: url
      value: $(params.git-url)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: revision
      value: $(params.git-revision)

  - name: cut-commit-hash
    params:
      - name: commit
        value: $(tasks.fetch-repository.results.commit)
    runAfter:
      - fetch-repository
    taskRef:
      name: cut-commit-hash

  - name: build-artifact-mvn
    taskRef:
      name: maven
      kind: ClusterTask
    params: 
      - name: GOALS
        value: 
          - 'clean'
          - 'package'
    runAfter:
      - cut-commit-hash
    workspaces:
    - name: source
      workspace: shared-workspace
    - name: maven-settings
      workspace: maven-settings
  - name: build-image-latest
    params:
      - name: IMAGE
        value: $(params.image):latest
      - name: TLSVERIFY
        value: 'false'
    runAfter:
      - build-artifact-mvn
    taskRef:
      kind: ClusterTask
      name: buildah
    workspaces:
      - name: source
        workspace: shared-workspace

  - name: apply-deployment
    params:
      - name: SCRIPT
        value: |
          oc apply -f openshift/
    runAfter:
      - build-image-latest
    taskRef:
      kind: ClusterTask
      name: openshift-client
    workspaces:
      - name: manifest-dir
        workspace: shared-workspace

  - name: tag-latest-to-hash
    params:
      - name: SCRIPT
        value: |
          oc tag $(params.deployment-name):latest $(params.deployment-name):$(tasks.cut-commit-hash.results.commit_short)
    runAfter:
      - apply-deployment
    taskRef:
      kind: ClusterTask
      name: openshift-client
    workspaces:
      - name: manifest-dir
        workspace: shared-workspace

#  - name: patch-deployment
#    params:
#      - name: SCRIPT
#        value: |
#          echo $(params.deployment-name);
#          echo $(params.image);
#          export DEPLOYMENT=$(params.deployment-name)
#          export IMAGETAG="$(params.image):$(tasks.cut-commit-hash.results.commit_short)";
#          echo $DEPLOYMENT;
#          echo "||$IMAGETAG||";
#          oc patch deployment $DEPLOYMENT --patch='{"spec":{"template":{"spec":{
#            "containers":[{
#              "name": "$(params.deployment-name)",
#              "image":"$(params.image):$(tasks.cut-commit-hash.results.commit_short)"
#            }]
#          }}}}';
#    runAfter:
#      - tag-latest-to-hash
#    taskRef:
#      kind: ClusterTask
#      name: openshift-client
#    workspaces:
#      - name: manifest-dir
#        workspace: shared-workspace
#test
